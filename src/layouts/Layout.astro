---
interface Props {
  page: {
    title: string;
    meta?: {
      description: string;
      image: string;
    };
  };
}

import { ViewTransitions } from "astro:transitions";

const { page } = Astro.props;
import { Toaster } from "@/components/ui/toaster";
import "@/styles/globals.css";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={page.meta?.description} />
    <meta name="twitter:image" content={page.meta?.image} />
    <title>{page.title}</title>
    <ViewTransitions />
  </head>
  <body>
    <slot />
    <Toaster client:load />
  </body><script is:inline>
    const setDarkMode = () => {
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", theme);
    };

    setDarkMode();
    document.addEventListener("astro:after-swap", setDarkMode);
  </script>
</html>
