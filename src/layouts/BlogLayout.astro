---
import { Button } from "@components/ui/button";
import { ViewTransitions } from "astro:transitions";
import { BugIcon, ChevronLeftIcon } from "lucide-react";
const { frontmatter } = Astro.props;
import { Toaster } from "@/components/ui/toaster";
import "@/styles/globals.css";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={frontmatter.description} />
    <meta name="twitter:image" content={frontmatter.image} />
    <title>{frontmatter.title}</title>
    <ViewTransitions />
  </head>
  <body>
    <main transition:animate="slide">
      <a href="/blogs">
        <Button variant="link" className="pl-0">
          <ChevronLeftIcon className="mr-2 h-4 w-4" />back to blogs
        </Button>
      </a>
      <article class="prose my-4 max-w-full dark:prose-invert">
        <slot />
      </article>
      <div class="flex items-center justify-center py-10">
        <hr class="w-1/3" />
        <span class="mx-4 text-gray-500 dark:text-gray-400"
          ><span class="mx-1 mb-1 inline-block align-middle"
            ><BugIcon className="h-4 w-4" /></span
          > end <span class="mx-1 mb-1 inline-block align-middle"
            ><BugIcon className="h-4 w-4" /></span
          ></span
        >
        <hr class="w-1/3" />
      </div>
      <a href="/blogs">
        <Button variant="link" className="pl-0">
          <ChevronLeftIcon className="mr-2 h-4 w-4" />back to blogs
        </Button>
      </a>
    </main>
    <Toaster client:load />
    <style>
      main {
        margin: auto;
        padding: 1rem;
        width: 800px;
        max-width: calc(100% - 2rem);
        margin-bottom: 8rem;
      }
    </style>
  </body><script is:inline>
    const setDarkMode = () => {
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      window.localStorage.setItem("theme", theme);
    };

    setDarkMode();
    document.addEventListener("astro:after-swap", setDarkMode);
  </script>
</html>
